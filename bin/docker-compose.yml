networks:
  trading-bot-network:
    driver: bridge

volumes:
  timescale_data: {}

services:
  # -------------------------
  # Database
  # -------------------------
  database:
    build:
      context: .
      dockerfile: ./compose/database/Dockerfile
    container_name: trading-db
    env_file:
      - ./.envs/.database
    volumes:
      - timescale_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d trading"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - trading-bot-network

  # -------------------------
  # Redis
  # -------------------------
  redis:
    image: redis:7.0
    container_name: trading-redis
    restart: unless-stopped
    networks:
      - trading-bot-network

  # -------------------------
  # Collector Worker
  # -------------------------
  collector:
    build:
      context: .
      dockerfile: ./compose/bot/Dockerfile
    container_name: collector
    env_file:
      - ./.envs/.bot
    command: celery -A tasks worker --loglevel=INFO -Q collector_queue
    depends_on:
      - database
      - redis
    restart: unless-stopped
    networks:
      - trading-bot-network

  # -------------------------
  # Trader Worker
  # -------------------------
  trader:
    build:
      context: .
      dockerfile: ./compose/bot/Dockerfile
    container_name: trader
    env_file:
      - ./.envs/.bot
    command: celery -A tasks worker --loglevel=INFO -Q trader_queue
    depends_on:
      - database
      - redis
    restart: unless-stopped
    networks:
      - trading-bot-network

  # -------------------------
  # Optimizer Worker
  # -------------------------
  optimizer:
    build:
      context: .
      dockerfile: ./compose/bot/Dockerfile
    container_name: optimizer
    env_file:
      - ./.envs/.bot
    command: celery -A tasks worker --loglevel=INFO -Q optimizer_queue
    depends_on:
      - database
      - redis
    restart: unless-stopped
    networks:
      - trading-bot-network

  # -------------------------
  # Celery Beat
  # -------------------------
  beat:
    build:
      context: .
      dockerfile: ./compose/bot/Dockerfile
    container_name: beat
    env_file:
      - ./.envs/.bot
    command: celery -A beat_schedule beat --loglevel=INFO
    depends_on:
      - database
      - redis
    restart: unless-stopped
    networks:
      - trading-bot-network
